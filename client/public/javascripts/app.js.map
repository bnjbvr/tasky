{"version":3,"file":"public/javascripts/app.js","sources":["app/application.coffee","app/collections/tags.coffee","app/collections/tasks.coffee","app/initialize.coffee","app/lib/base_view.coffee","app/lib/utils.coffee","app/lib/view_collection.coffee","app/models/task.coffee","app/router.coffee","app/views/app_view.coffee","app/views/menu_item_view.coffee","app/views/menu_view.coffee","app/views/submenu_item_view.coffee","app/views/submenu_view.coffee","app/views/task_form_view.coffee","app/views/task_list_view.coffee","app/views/task_view.coffee","app/views/templates/home.jade","app/views/templates/menu.jade","app/views/templates/menu_item.jade","app/views/templates/task.jade","app/views/templates/task_form.jade","app/views/templates/task_list.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxpEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAztKA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArnnJA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A","sourcesContent":["module.exports = {\n  initialize: function() {\n    var Router;\n\n    Router = require('router');\n    this.router = new Router();\n    Backbone.history.start();\n    if (typeof Object.freeze === 'function') {\n      return Object.freeze(this);\n    }\n  }\n};\n","var TagsCollection, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = TagsCollection = (function(_super) {\n  __extends(TagsCollection, _super);\n\n  function TagsCollection() {\n    _ref = TagsCollection.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  TagsCollection.prototype.comparator = function(a, b) {\n    if (a.get('count') > b.get('count')) {\n      return -1;\n    } else if (a.get('count') === b.get('count')) {\n      if (a.get('selectIndex') === -1 && b.get('selectIndex') === -1) {\n        return 0;\n      } else if (a.get('selectIndex') > -1 && b.get('selectIndex') === -1) {\n        return -1;\n      } else if (a.get('selectIndex') === -1 && b.get('selectIndex') > -1) {\n        return 1;\n      } else {\n        if (a.get('selectIndex') < b.get('selectIndex')) {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return 1;\n    }\n  };\n\n  TagsCollection.extractFromTasks = function(taskCollection, excludes, selectedTags) {\n    var tagsList;\n\n    if (excludes == null) {\n      excludes = [];\n    }\n    if (selectedTags == null) {\n      selectedTags = [];\n    }\n    tagsList = new TagsCollection();\n    taskCollection.pluck('tags').forEach(function(tagsOfTask) {\n      return tagsOfTask.forEach(function(tag) {\n        var tagInfo;\n\n        tag = tag.toLowerCase();\n        if (!_.contains(excludes, tag)) {\n          if (tagsList.get(tag) == null) {\n            tagsList.add(new Backbone.Model({\n              id: tag,\n              count: 0,\n              selectIndex: selectedTags.indexOf(tag)\n            }));\n          }\n          tagInfo = tagsList.get(tag);\n          return tagInfo.set('count', tagInfo.get('count') + 1);\n        }\n      });\n    });\n    tagsList.sort();\n    return tagsList;\n  };\n\n  return TagsCollection;\n\n})(Backbone.Collection);\n","var TagsCollection, Task, TaskCollection, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nTagsCollection = require('./tags');\n\nTask = require('../models/task');\n\nmodule.exports = TaskCollection = (function(_super) {\n  __extends(TaskCollection, _super);\n\n  function TaskCollection() {\n    _ref = TaskCollection.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  TaskCollection.prototype.url = 'tasks';\n\n  TaskCollection.prototype.model = Task;\n\n  TaskCollection.prototype.comparator = function(a, b) {\n    if (a.get('order') > b.get('order')) {\n      return -1;\n    } else if (a.get('order') === b.get('order')) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  TaskCollection.prototype.getNewOrder = function(prev, next) {\n    var nextOrder, prevOrder;\n\n    nextOrder = next != null ? next.get('order') : 0.0;\n    if (prev != null) {\n      prevOrder = prev.get('order');\n      return prevOrder - (prevOrder - nextOrder) / DIVISOR;\n    } else {\n      return nextOrder + 1.0;\n    }\n  };\n\n  TaskCollection.prototype.getAllTags = function() {\n    return TagsCollection.extractFromTasks(this);\n  };\n\n  TaskCollection.prototype.getByTags = function(tags) {\n    if (tags === void 0 || tags === null) {\n      return this;\n    }\n    if (tags.length === 0) {\n      return new BackboneProjections.Filtered(this, {\n        filter: function(task) {\n          return task.get('tags').length === 0;\n        }\n      });\n    }\n    return new BackboneProjections.Filtered(this, {\n      filter: function(task) {\n        return task.containsTags(tags);\n      }\n    });\n  };\n\n  return TaskCollection;\n\n})(Backbone.Collection);\n","var app;\n\napp = require('application');\n\n$(function() {\n  return app.initialize();\n});\n","var BaseView, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = BaseView = (function(_super) {\n  __extends(BaseView, _super);\n\n  function BaseView() {\n    _ref = BaseView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  BaseView.prototype.template = function() {};\n\n  BaseView.prototype.initialize = function() {};\n\n  BaseView.prototype.getRenderData = function() {\n    var _ref1;\n\n    return {\n      model: (_ref1 = this.model) != null ? _ref1.toJSON() : void 0\n    };\n  };\n\n  BaseView.prototype.render = function() {\n    this.beforeRender();\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  };\n\n  BaseView.prototype.beforeRender = function() {};\n\n  BaseView.prototype.afterRender = function() {};\n\n  BaseView.prototype.destroy = function() {\n    this.undelegateEvents();\n    this.$el.removeData().unbind();\n    this.remove();\n    return Backbone.View.prototype.remove.call(this);\n  };\n\n  return BaseView;\n\n})(Backbone.View);\n","module.exports.buildTagsList = function(tags, options) {\n  var lastSeparator, regularSeparator, tagPrefix, tagsList;\n\n  if (options == null) {\n    options = {};\n  }\n  tagPrefix = options.tagPrefix || '';\n  regularSeparator = options.regularSeparator || ' ';\n  lastSeparator = options.lastSeparator || ' ';\n  if (tags == null) {\n    return \"\";\n  }\n  tagsList = \"\";\n  tags.forEach(function(tag) {\n    if (tags.indexOf(tag) === 0) {\n      return tagsList = \"\" + tagPrefix + tag;\n    } else if (tags.indexOf(tag) === (tags.length - 1)) {\n      return tagsList = \"\" + tagsList + lastSeparator + tagPrefix + tag;\n    } else {\n      return tagsList = \"\" + tagsList + regularSeparator + tagPrefix + tag;\n    }\n  });\n  return tagsList;\n};\n","var BaseView, ViewCollection, _ref,\n  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('lib/base_view');\n\nmodule.exports = ViewCollection = (function(_super) {\n  __extends(ViewCollection, _super);\n\n  function ViewCollection() {\n    this.removeItem = __bind(this.removeItem, this);\n    this.addItem = __bind(this.addItem, this);    _ref = ViewCollection.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  ViewCollection.prototype.itemview = null;\n\n  ViewCollection.prototype.views = {};\n\n  ViewCollection.prototype.template = function() {\n    return '';\n  };\n\n  ViewCollection.prototype.itemViewOptions = function() {};\n\n  ViewCollection.prototype.collectionEl = null;\n\n  ViewCollection.prototype.onChange = function() {\n    return this.$el.toggleClass('empty', _.size(this.views) === 0);\n  };\n\n  ViewCollection.prototype.appendView = function(view) {\n    return this.$collectionEl.append(view.el);\n  };\n\n  ViewCollection.prototype.initialize = function() {\n    var collectionEl;\n\n    ViewCollection.__super__.initialize.apply(this, arguments);\n    this.views = {};\n    this.listenTo(this.collection, \"reset\", this.onReset);\n    this.listenTo(this.collection, \"add\", this.addItem);\n    this.listenTo(this.collection, \"remove\", this.removeItem);\n    if (this.collectionEl == null) {\n      return collectionEl = el;\n    }\n  };\n\n  ViewCollection.prototype.render = function() {\n    var id, view, _ref1;\n\n    _ref1 = this.views;\n    for (id in _ref1) {\n      view = _ref1[id];\n      view.$el.detach();\n    }\n    return ViewCollection.__super__.render.apply(this, arguments);\n  };\n\n  ViewCollection.prototype.afterRender = function() {\n    var id, view, _ref1;\n\n    this.$collectionEl = $(this.collectionEl);\n    _ref1 = this.views;\n    for (id in _ref1) {\n      view = _ref1[id];\n      this.appendView(view.$el);\n    }\n    this.onReset(this.collection);\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.remove = function() {\n    this.onReset([]);\n    return ViewCollection.__super__.remove.apply(this, arguments);\n  };\n\n  ViewCollection.prototype.onReset = function(newcollection) {\n    var id, view, _ref1;\n\n    _ref1 = this.views;\n    for (id in _ref1) {\n      view = _ref1[id];\n      view.remove();\n    }\n    return newcollection.forEach(this.addItem);\n  };\n\n  ViewCollection.prototype.addItem = function(model) {\n    var options, view;\n\n    options = _.extend({}, {\n      model: model\n    }, this.itemViewOptions(model));\n    view = new this.itemView(options);\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.removeItem = function(model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n    return this.onChange(this.views);\n  };\n\n  return ViewCollection;\n\n})(BaseView);\n","var Task, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nmodule.exports = Task = (function(_super) {\n  __extends(Task, _super);\n\n  function Task() {\n    _ref = Task.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  Task.prototype.set = function(attributes, options) {\n    var tags;\n\n    Task.__super__.set.call(this, attributes, options);\n    if (attributes === \"description\") {\n      tags = Task.extractTags(this.get('description'));\n      return this.set('tags', tags);\n    }\n  };\n\n  Task.prototype.containsTags = function(tags) {\n    if (!(tags instanceof Array)) {\n      tags = [tags];\n    }\n    if (tags.length === 0) {\n      return this.get('tags').length === 0;\n    } else {\n      return _.every(tags, _.partial(_.contains, this.get('tags')));\n    }\n  };\n\n  Task.prototype.getPreviousWithTags = function(tags) {\n    var previousPosition, previousTask;\n\n    if (tags === null) {\n      return this.collection.get(this.get('previous'));\n    }\n    previousTask = this.collection.get(this.get('previous'));\n    previousPosition = this.collection.indexOf(previousTask);\n    while (!((previousTask == null) || previousTask.containsTags(tags))) {\n      previousTask = this.collection.get(previousTask.get('previous'));\n      previousPosition = this.collection.indexOf(previousTask);\n    }\n    if ((previousTask != null) && previousTask.containsTags(tags)) {\n      return previousTask;\n    } else {\n      return null;\n    }\n  };\n\n  Task.regex = /#([\\w\\d\\-_\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)/g;\n\n  Task.extractTags = function(desc) {\n    var tags;\n\n    tags = desc.match(Task.regex);\n    tags = _.unique(tags);\n    tags = _.map(tags, function(tag) {\n      return tag.replace('#', '');\n    });\n    return tags;\n  };\n\n  return Task;\n\n})(Backbone.Model);\n","var AppView, MenuView, Router, Task, TaskCollection, TaskListView, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nAppView = require('views/app_view');\n\nMenuView = require('views/menu_view');\n\nTaskListView = require('views/task_list_view');\n\nTaskCollection = require('collections/tasks');\n\nTask = require('models/task');\n\nmodule.exports = Router = (function(_super) {\n  __extends(Router, _super);\n\n  function Router() {\n    _ref = Router.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  Router.prototype.routes = {\n    '': 'main',\n    'untagged': 'untagged',\n    'byTags/*tags': 'byTags'\n  };\n\n  Router.prototype.initialize = function() {\n    this.collection = new TaskCollection(initTasks);\n    this.mainView = new AppView();\n    this.mainView.render();\n    this.menu = new MenuView({\n      baseCollection: this.collection\n    });\n    this.menu.render();\n    return this.taskList = new TaskListView({\n      baseCollection: this.collection\n    });\n  };\n\n  Router.prototype.main = function() {\n    var tags;\n\n    tags = null;\n    this.taskList.setTags(tags);\n    this.taskList.render();\n    return this.menu.setActive(tags);\n  };\n\n  Router.prototype.untagged = function() {\n    var tags;\n\n    tags = [];\n    this.taskList.setTags(tags);\n    this.taskList.render();\n    return this.menu.setActive(tags);\n  };\n\n  Router.prototype.byTags = function(tags) {\n    tags = tags.split('/');\n    if (tags[tags.length - 1] === \"\") {\n      delete tags[tags.length - 1];\n    }\n    this.taskList.setTags(tags);\n    this.taskList.render();\n    return this.menu.setActive(tags);\n  };\n\n  return Router;\n\n})(Backbone.Router);\n","var AppView, BaseView, MenuView, TaskListView, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nMenuView = require('./menu_view');\n\nTaskListView = require('./task_list_view');\n\nmodule.exports = AppView = (function(_super) {\n  __extends(AppView, _super);\n\n  function AppView() {\n    _ref = AppView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  AppView.prototype.el = 'body';\n\n  AppView.prototype.template = require('./templates/home');\n\n  return AppView;\n\n})(BaseView);\n","var BaseView, MenuItemView, SubmenuItemView, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nSubmenuItemView = require('./submenu_item_view');\n\nmodule.exports = MenuItemView = (function(_super) {\n  __extends(MenuItemView, _super);\n\n  function MenuItemView() {\n    _ref = MenuItemView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  MenuItemView.prototype.tagName = 'li';\n\n  MenuItemView.prototype.className = 'first-level';\n\n  MenuItemView.prototype.template = require('./templates/menu_item');\n\n  MenuItemView.prototype.getRenderData = function() {\n    var params;\n\n    params = MenuItemView.__super__.getRenderData.call(this);\n    _.extend(params, {\n      url: this.buildUrl()\n    });\n    return params;\n  };\n\n  MenuItemView.prototype.afterRender = function() {\n    return this.$el.data('menu-item', this.cid);\n  };\n\n  MenuItemView.prototype.buildUrl = function() {\n    return \"#byTags/\" + (this.model.get('tagName'));\n  };\n\n  return MenuItemView;\n\n})(BaseView);\n","var BaseView, MenuItemView, MenuView, SubmenuView,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nMenuItemView = require('./menu_item_view');\n\nSubmenuView = require('./submenu_view');\n\nmodule.exports = MenuView = (function(_super) {\n  __extends(MenuView, _super);\n\n  MenuView.prototype.el = '#menu';\n\n  MenuView.prototype.template = require('./templates/menu');\n\n  MenuView.prototype.events = {\n    'click li.first-level': 'onClick'\n  };\n\n  MenuView.prototype.views = null;\n\n  MenuView.prototype.collectionEl = 'ul.tags';\n\n  MenuView.prototype.activeTags = null;\n\n  MenuView.prototype.subMenuHandler = null;\n\n  function MenuView(options) {\n    this.baseCollection = options.baseCollection;\n    this.views = new Backbone.ChildViewContainer();\n    MenuView.__super__.constructor.call(this, options);\n  }\n\n  MenuView.prototype.initialize = function(options) {\n    this.listenTo(this.baseCollection, {\n      'add': this.onChange,\n      'change': this.onChange,\n      'remove': this.onChange\n    });\n    return MenuView.__super__.initialize.call(this, options);\n  };\n\n  MenuView.prototype.getRenderData = function() {\n    return {\n      allCount: this.baseCollection.length,\n      untaggedCount: this.baseCollection.filter(function(task) {\n        return task.get('tags').length === 0;\n      }).length\n    };\n  };\n\n  MenuView.prototype.beforeRender = function() {\n    var tagsList,\n      _this = this;\n\n    tagsList = this.baseCollection.getAllTags();\n    return this.views.forEach(function(taskView) {\n      if (tagsList.indexOf(taskView.model.get('tagName')) !== -1) {\n        return taskView.$el.detach();\n      } else {\n        _this.stopListening(taskView);\n        _this.views.remove(taskView);\n        return taskView.destroy();\n      }\n    });\n  };\n\n  MenuView.prototype.afterRender = function() {\n    var tags,\n      _this = this;\n\n    tags = this.baseCollection.getAllTags();\n    tags.forEach(function(tagInfo) {\n      var menuItem;\n\n      menuItem = new MenuItemView({\n        model: new Backbone.Model({\n          tagName: tagInfo.get('id'),\n          count: tagInfo.get('count')\n        })\n      });\n      _this.views.add(menuItem);\n      return $(_this.collectionEl).append(menuItem.render().$el);\n    });\n    return this.$el;\n  };\n\n  MenuView.prototype.onChange = function() {\n    this.render();\n    return this.handleTagSelection();\n  };\n\n  MenuView.prototype.setActive = function(tags) {\n    this.activeTags = tags;\n    return this.handleTagSelection();\n  };\n\n  MenuView.prototype.handleTagSelection = function() {\n    var _this = this;\n\n    this.$('li.active').removeClass('active');\n    if (this.activeTags === null) {\n      this.$('ul.permanent li:first-of-type').addClass('active');\n      return this.handleSubmenu(null);\n    } else if (this.activeTags.length === 0) {\n      this.$('ul.permanent li:nth-of-type(2)').addClass('active');\n      return this.handleSubmenu(null);\n    } else {\n      return this.views.some(function(view) {\n        if (view.model.get('tagName') === _this.activeTags[0]) {\n          view.$el.addClass('active');\n          _this.handleSubmenu(view.cid, _this.activeTags);\n          return true;\n        }\n      });\n    }\n  };\n\n  MenuView.prototype.onClick = function(event) {\n    var domElement, menuItemId, rootTag;\n\n    this.$('li.active').removeClass('active');\n    domElement = $(event.currentTarget);\n    domElement.addClass('active');\n    menuItemId = domElement.data('menu-item');\n    if (menuItemId === this.subMenuHandler) {\n      return this.closeSubmenu();\n    } else if (this.subMenuHandler === null && menuItemId !== void 0) {\n      rootTag = this.views.findByCid(menuItemId).model.get('tagName');\n      return this.handleSubmenu(menuItemId, [rootTag]);\n    }\n  };\n\n  MenuView.prototype.handleSubmenu = function(menuItemId, selectedTags) {\n    var relatedView;\n\n    if (selectedTags == null) {\n      selectedTags = [];\n    }\n    this.closeSubmenu();\n    if (menuItemId == null) {\n      return;\n    }\n    relatedView = this.views.findByCid(menuItemId);\n    this.submenu = new SubmenuView({\n      baseCollection: this.baseCollection,\n      relatedView: relatedView,\n      selectedTags: selectedTags\n    });\n    this.submenu.render();\n    return this.subMenuHandler = menuItemId;\n  };\n\n  MenuView.prototype.closeSubmenu = function() {\n    if (this.submenu != null) {\n      this.submenu.destroy();\n    }\n    this.subMenuHandler = null;\n    return delete this.submenu;\n  };\n\n  return MenuView;\n\n})(BaseView);\n","var BaseView, SubmenuItemView, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = SubmenuItemView = (function(_super) {\n  __extends(SubmenuItemView, _super);\n\n  function SubmenuItemView() {\n    _ref = SubmenuItemView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  SubmenuItemView.prototype.tagName = 'li';\n\n  SubmenuItemView.prototype.template = require('./templates/menu_item');\n\n  SubmenuItemView.prototype.events = {\n    'click': 'onClick'\n  };\n\n  SubmenuItemView.prototype.afterRender = function() {\n    if (_.contains(this.model.get('selectedTags'), this.model.get('tagName'))) {\n      return this.$el.addClass('selected');\n    }\n  };\n\n  SubmenuItemView.prototype.getRenderData = function() {\n    var params;\n\n    params = SubmenuItemView.__super__.getRenderData.call(this);\n    _.extend(params, {\n      url: this.buildUrl()\n    });\n    return params;\n  };\n\n  SubmenuItemView.prototype.buildUrl = function() {\n    var tagsInUrl, url,\n      _this = this;\n\n    tagsInUrl = _.clone(this.model.get('selectedTags'));\n    if (!_.contains(tagsInUrl, this.model.get('tagName'))) {\n      tagsInUrl.push(this.model.get('tagName'));\n    } else if (_.contains(tagsInUrl, this.model.get('tagName'))) {\n      tagsInUrl = _.without(tagsInUrl, this.model.get('tagName'));\n    }\n    url = \"#byTags\";\n    tagsInUrl.forEach(function(item) {\n      return url = \"\" + url + \"/\" + item;\n    });\n    return url;\n  };\n\n  SubmenuItemView.prototype.onClick = function() {\n    var isActivated;\n\n    isActivated = this.$el.hasClass('selected');\n    if (isActivated) {\n      this.trigger('unselect', this.model.get('tagName'));\n      return this.$el.removeClass('selected');\n    } else {\n      this.trigger('select', this.model.get('tagName'));\n      return this.$el.addClass('selected');\n    }\n  };\n\n  return SubmenuItemView;\n\n})(BaseView);\n","var BaseView, SubmenuItemView, SubmenuView, TagsCollection,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nSubmenuItemView = require('./submenu_item_view');\n\nTagsCollection = require('../collections/tags');\n\nmodule.exports = SubmenuView = (function(_super) {\n  __extends(SubmenuView, _super);\n\n  SubmenuView.prototype.tagName = 'ul';\n\n  SubmenuView.prototype.className = 'submenu';\n\n  SubmenuView.prototype.views = null;\n\n  function SubmenuView(options) {\n    this.baseCollection = options.baseCollection;\n    this.relatedView = options.relatedView;\n    this.selectedTags = options.selectedTags || [];\n    this.views = new Backbone.ChildViewContainer();\n    SubmenuView.__super__.constructor.call(this, options);\n  }\n\n  SubmenuView.prototype.getRootTagName = function() {\n    return this.relatedView.model.get('tagName');\n  };\n\n  SubmenuView.prototype.buildTagsList = function() {\n    if (this.collection != null) {\n      delete this.collection;\n    }\n    this.collection = this.baseCollection.getByTags(this.selectedTags);\n    return this.tagsList = TagsCollection.extractFromTasks(this.collection, [this.getRootTagName()], this.selectedTags);\n  };\n\n  SubmenuView.prototype.beforeRender = function() {\n    this.buildTagsList();\n    return this.reset();\n  };\n\n  SubmenuView.prototype.afterRender = function() {\n    var _this = this;\n\n    this.relatedView.$el.append(this.$el);\n    return this.tagsList.forEach(function(tagInfo) {\n      var menuItem;\n\n      menuItem = new SubmenuItemView({\n        model: new Backbone.Model({\n          tagName: tagInfo.get('id'),\n          count: tagInfo.get('count'),\n          selectedTags: _this.selectedTags\n        })\n      });\n      _this.views.add = menuItem;\n      return _this.$el.append(menuItem.render().$el);\n    });\n  };\n\n  SubmenuView.prototype.reset = function() {\n    var _this = this;\n\n    return this.views.forEach(function(taskView) {\n      if (_this.tagsList.indexOf(taskView.model.get('tagName')) !== -1) {\n        return taskView.$el.detach();\n      } else {\n        _this.stopListening(taskView);\n        _this.views.remove(taskView);\n        return taskView.destroy();\n      }\n    });\n  };\n\n  SubmenuView.prototype.destroy = function() {\n    this.reset();\n    return SubmenuView.__super__.destroy.call(this);\n  };\n\n  return SubmenuView;\n\n})(BaseView);\n","var BaseView, TaskFormView, TaskView, Utils, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nBaseView = require('../lib/base_view');\n\nUtils = require('../lib/utils');\n\nTaskView = require('./task_view');\n\nmodule.exports = TaskFormView = (function(_super) {\n  __extends(TaskFormView, _super);\n\n  function TaskFormView() {\n    _ref = TaskFormView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  TaskFormView.prototype.el = '#new-task';\n\n  TaskFormView.prototype.template = require('./templates/task_form');\n\n  TaskFormView.prototype.events = {\n    'keydown input': 'onKeydown',\n    'keyup input': 'onKeyup',\n    'click button': 'onSubmit'\n  };\n\n  TaskFormView.prototype.initialize = function(options) {\n    TaskFormView.__super__.initialize.call(this);\n    return this.tags = options.tags;\n  };\n\n  TaskFormView.prototype.onKeydown = function(event) {\n    var authorizedComboKeys, inputVal, key, neutralKeys, tagsList;\n\n    key = event.keyCode || event.charCode;\n    inputVal = this.$('input').val();\n    tagsList = Utils.buildTagsList(this.tags, {\n      tagPrefix: '#'\n    });\n    if (tagsList !== \"\") {\n      tagsList = \"\" + tagsList + \" \";\n    }\n    neutralKeys = [8, 32, 9, 13, 38, 40, 37, 39];\n    authorizedComboKeys = [220, 86];\n    if (inputVal.length === 0 && __indexOf.call(neutralKeys, key) < 0 && (!(event.metaKey || event.ctrlKey || event.altKey) || __indexOf.call(authorizedComboKeys, key) >= 0)) {\n      this.$('input').val(tagsList);\n      return inputVal = tagsList;\n    }\n  };\n\n  TaskFormView.prototype.onKeyup = function(event) {\n    var inputVal, key;\n\n    key = event.keyCode || event.charCode;\n    inputVal = this.$('input').val();\n    if (inputVal.length === 0) {\n      this.$('button').addClass('disabled');\n      this.$('button').html(\"New\");\n    } else {\n      this.$('button').removeClass('disabled');\n      this.$('button').html(\"Add\");\n    }\n    if (key === 13) {\n      this.onSubmit();\n    }\n    if (key === 40) {\n      return this.trigger('focus-down');\n    }\n  };\n\n  TaskFormView.prototype.onSubmit = function() {\n    var inputVal;\n\n    inputVal = this.$('input').val();\n    if (inputVal.length > 0) {\n      return this.trigger('new-task-submitted', {\n        content: inputVal\n      });\n    }\n  };\n\n  TaskFormView.prototype.getRenderData = function() {\n    return {\n      formPlaceholder: this.getFormPlaceholder()\n    };\n  };\n\n  TaskFormView.prototype.getFormPlaceholder = function() {\n    var tagsList;\n\n    tagsList = Utils.buildTagsList(this.tags, {\n      tagPrefix: '#',\n      regularSeparator: ', ',\n      lastSeparator: ' and '\n    });\n    if (tagsList.length > 0) {\n      return \"What's next with \" + tagsList + \"?\";\n    } else {\n      return \"What's next?\";\n    }\n  };\n\n  return TaskFormView;\n\n})(BaseView);\n","var BaseView, Task, TaskFormView, TaskListView, TaskView, Utils,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nUtils = require('../lib/utils');\n\nTask = require('../models/task');\n\nTaskView = require('./task_view');\n\nTaskFormView = require('./task_form_view');\n\nmodule.exports = TaskListView = (function(_super) {\n  __extends(TaskListView, _super);\n\n  TaskListView.prototype.el = '.container';\n\n  TaskListView.prototype.template = require('./templates/task_list');\n\n  TaskListView.prototype.views = null;\n\n  TaskListView.prototype.collectionEl = 'ul#task-list';\n\n  TaskListView.prototype.queue = [];\n\n  TaskListView.prototype.processing = false;\n\n  function TaskListView(options) {\n    this.baseCollection = options.baseCollection;\n    this.views = new Backbone.ChildViewContainer();\n    TaskListView.__super__.constructor.call(this, options);\n  }\n\n  TaskListView.prototype.setTags = function(tags) {\n    var _this = this;\n\n    this.selectedTags = tags;\n    if (this.collection != null) {\n      this.stopListening(this.collection);\n      delete this.collection;\n    }\n    this.collection = this.baseCollection.getByTags(this.selectedTags);\n    this.listenTo(this.collection, 'add', this.render);\n    return this.listenTo(this.collection, 'remove', function(task) {\n      var previousVisibleTask;\n\n      previousVisibleTask = task.getPreviousWithTags(_this.selectedTags);\n      if (previousVisibleTask != null) {\n        _this.taskModelCIDToFocus = previousVisibleTask.cid;\n      }\n      return _this.render();\n    });\n  };\n\n  TaskListView.prototype.getRenderData = function() {\n    return {\n      title: this.getTitle()\n    };\n  };\n\n  TaskListView.prototype.beforeRender = function() {\n    var _this = this;\n\n    return this.views.forEach(function(taskView) {\n      if (_this.collection.indexOf(taskView.model) !== -1) {\n        return taskView.$el.detach();\n      } else {\n        _this.stopListening(taskView);\n        _this.views.remove(taskView);\n        return taskView.destroy();\n      }\n    });\n  };\n\n  TaskListView.prototype.afterRender = function() {\n    var view,\n      _this = this;\n\n    if (this.taskForm != null) {\n      this.stopListening(this.taskForm);\n      this.taskForm.destroy();\n    }\n    this.taskForm = new TaskFormView({\n      tags: this.selectedTags\n    });\n    this.listenTo(this.taskForm, 'new-task-submitted', this.createNewTask);\n    this.listenTo(this.taskForm, 'focus-down', this.onFocusDown);\n    this.taskForm.render();\n    this.collection.forEach(function(task) {\n      var taskView;\n\n      taskView = _this.views.findByModel(task);\n      if (taskView == null) {\n        taskView = new TaskView({\n          model: task\n        });\n        _this.views.add(taskView);\n        _this.listenTo(taskView, 'new-task-submitted', _this.createNewTask);\n        _this.listenTo(taskView, 'focus-up', _this.onFocusUp);\n        _this.listenTo(taskView, 'focus-down', _this.onFocusDown);\n        _this.listenTo(taskView, 'move-up', _this.onMoveUp);\n        _this.listenTo(taskView, 'move-down', _this.onMoveDown);\n      }\n      return $(_this.collectionEl).append(taskView.render().$el);\n    });\n    if (this.taskModelCIDToFocus != null) {\n      view = this.views.findByModelCid(this.taskModelCIDToFocus);\n      if (view != null) {\n        view.setFocus();\n      } else {\n        console.log(\"something went wrong trying to focus\");\n      }\n      this.taskModelCIDToFocus = null;\n    } else {\n      this.taskForm.$el.find('input').focus();\n    }\n    return this.$el;\n  };\n\n  TaskListView.prototype.getTitle = function() {\n    var tagsList;\n\n    if (this.collection.length === this.baseCollection.length) {\n      return \"All tasks\";\n    } else if ((this.selectedTags != null) && this.selectedTags.length === 0) {\n      return \"Untagged tasks\";\n    } else {\n      tagsList = Utils.buildTagsList(this.selectedTags, {\n        tagPrefix: '#',\n        regularSeparator: ', ',\n        lastSeparator: ' and '\n      });\n      return \"Tasks of \" + tagsList;\n    }\n  };\n\n  TaskListView.prototype.createNewTask = function(options) {\n    var content, index, newNext, nextIndex, order, previous, tagsList, task;\n\n    if (options == null) {\n      options = {};\n    }\n    tagsList = Utils.buildTagsList(this.selectedTags, {\n      tagPrefix: '#'\n    });\n    if (tagsList !== \"\") {\n      tagsList = \"\" + tagsList + \" \";\n    }\n    content = options.content || tagsList;\n    if (options.previous != null) {\n      previous = this.views.findByModelCid(options.previous).model;\n      nextIndex = this.baseCollection.indexOf(previous) + 1;\n      newNext = this.baseCollection.at(nextIndex);\n      order = this.baseCollection.getNewOrder(previous, newNext);\n      index = nextIndex;\n    } else {\n      newNext = this.baseCollection.at(0);\n      order = this.baseCollection.getNewOrder(null, newNext);\n    }\n    task = new Task({\n      description: content,\n      order: order,\n      tags: Task.extractTags(content)\n    });\n    this.taskModelCIDToFocus = options.previous != null ? task.cid : null;\n    return this.baseCollection.create(task, {\n      at: index\n    });\n  };\n\n  TaskListView.prototype.onFocusUp = function(cid) {\n    var currentModel, previousIndex, previousModel;\n\n    currentModel = this.views.findByModelCid(cid).model;\n    previousIndex = this.collection.indexOf(currentModel) - 1;\n    previousModel = this.collection.at(previousIndex);\n    if (previousIndex >= 0) {\n      return this.views.findByModel(previousModel).setFocus();\n    } else {\n      return this.taskForm.$el.find('input').focus();\n    }\n  };\n\n  TaskListView.prototype.onFocusDown = function(cid) {\n    var currentModel, nextIndex, nextModel;\n\n    if (cid != null) {\n      currentModel = this.views.findByModelCid(cid).model;\n      nextIndex = this.collection.indexOf(currentModel) + 1;\n      nextModel = this.collection.at(nextIndex);\n    } else {\n      nextIndex = 0;\n      nextModel = this.collection.at(nextIndex);\n    }\n    if (nextIndex < this.views.length) {\n      return this.views.findByModel(nextModel).setFocus();\n    }\n  };\n\n  TaskListView.prototype.onMoveUp = function(cid, toFocus) {\n    var currentModel, newOrder, newPrevious, previous, previousIndex;\n\n    if (toFocus == null) {\n      toFocus = null;\n    }\n    currentModel = this.views.findByModelCid(cid).model;\n    previousIndex = this.baseCollection.indexOf(currentModel) - 1;\n    previous = this.baseCollection.at(previousIndex);\n    if (previousIndex >= 1) {\n      newOrder = null;\n      newPrevious = this.baseCollection.at(previousIndex - 1);\n      newOrder = this.baseCollection.getNewOrder(newPrevious, previous);\n    } else if (previousIndex === 0) {\n      newOrder = this.baseCollection.getNewOrder(null, previous);\n    } else {\n      newOrder = null;\n    }\n    if (newOrder != null) {\n      currentModel.set('order', newOrder);\n      currentModel.save();\n      this.baseCollection.sort();\n      this.taskModelCIDToFocus = toFocus != null ? toFocus : cid;\n      return this.render();\n    }\n  };\n\n  TaskListView.prototype.onMoveDown = function(cid) {\n    var currentModel, nextIndex, nextModel, nextView;\n\n    currentModel = this.views.findByModelCid(cid).model;\n    nextIndex = this.baseCollection.indexOf(currentModel) + 1;\n    nextModel = this.baseCollection.at(nextIndex);\n    if (nextModel != null) {\n      nextView = this.views.findByModelCid(nextModel.cid);\n      return this.onMoveUp(nextModel.cid, cid);\n    }\n  };\n\n  return TaskListView;\n\n})(BaseView);\n","var BaseView, TaskView, _ref,\n  __hasProp = {}.hasOwnProperty,\n  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = TaskView = (function(_super) {\n  __extends(TaskView, _super);\n\n  function TaskView() {\n    _ref = TaskView.__super__.constructor.apply(this, arguments);\n    return _ref;\n  }\n\n  TaskView.prototype.tagName = 'li';\n\n  TaskView.prototype.className = 'task';\n\n  TaskView.prototype.template = require('./templates/task');\n\n  TaskView.prototype.events = {\n    'keydown  input': 'onKeydown',\n    'keyup  input': 'onKeyup',\n    'focus input': 'onFocus',\n    'blur input': 'onBlur',\n    'click button': 'onClick',\n    'mouseenter button': 'onMouseEnter',\n    'mouseleave button': 'onMouseLeave'\n  };\n\n  TaskView.prototype.getRenderData = function() {\n    return {\n      model: this.model.toJSON(),\n      tabindex: this.model.collection.indexOf(this.model) + 2\n    };\n  };\n\n  TaskView.prototype.afterRender = function() {\n    var button;\n\n    if (this.model.get('done')) {\n      button = this.$('button');\n      button.addClass('done');\n      return button.html('Done');\n    }\n  };\n\n  TaskView.prototype.onClick = function() {\n    this.model.set('done', !this.model.get('done'));\n    this.model.save();\n    return this.render();\n  };\n\n  TaskView.prototype.onKeydown = function(event) {\n    var ctrlPressed, key;\n\n    key = event.keyCode || event.charCode;\n    ctrlPressed = event.controlKey || event.metaKey;\n    if (this.$('input').val() === \"\" && key === 8) {\n      this.model.destroy();\n      return event.preventDefault();\n    } else if (key === 38 && ctrlPressed) {\n      return this.trigger('move-up', this.model.cid);\n    } else if (key === 40 && ctrlPressed) {\n      return this.trigger('move-down', this.model.cid);\n    }\n  };\n\n  TaskView.prototype.onKeyup = function(event) {\n    var key;\n\n    key = event.keyCode || event.charCode;\n    if (key === 13) {\n      this.onBlur();\n      return this.trigger('new-task-submitted', {\n        content: '',\n        previous: this.model.cid\n      });\n    } else if (key === 38) {\n      return this.trigger('focus-up', this.model.cid);\n    } else if (key === 40) {\n      return this.trigger('focus-down', this.model.cid);\n    }\n  };\n\n  TaskView.prototype.onFocus = function() {\n    var _this = this;\n\n    return this.focusInterval = setInterval(function() {\n      return _this.saveDescription();\n    }, 2000);\n  };\n\n  TaskView.prototype.onBlur = function() {\n    clearInterval(this.focusInterval);\n    return this.saveDescription();\n  };\n\n  TaskView.prototype.saveDescription = function() {\n    var description;\n\n    description = this.$('input').val();\n    if (description !== this.model.get('description')) {\n      this.model.set('description', description);\n      return this.model.save();\n    }\n  };\n\n  TaskView.prototype.setFocus = function() {\n    var index, inputField;\n\n    inputField = this.$('input');\n    inputField.focus();\n    index = inputField.val().length;\n    return inputField[0].setSelectionRange(index, index);\n  };\n\n  TaskView.prototype.onMouseEnter = function() {\n    var button;\n\n    button = this.$('button');\n    if (this.model.get('done')) {\n      return button.html('Todo?');\n    } else {\n      return button.html('Done?');\n    }\n  };\n\n  TaskView.prototype.onMouseLeave = function() {\n    var button;\n\n    button = this.$('button');\n    if (this.model.get('done')) {\n      return button.html('Done');\n    } else {\n      return button.html('Todo');\n    }\n  };\n\n  TaskView.prototype.destroy = function() {\n    clearTimeout(this.focusInterval);\n    return TaskView.__super__.destroy.call(this);\n  };\n\n  return TaskView;\n\n})(BaseView);\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"menu\"></div><div class=\"container\"></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<ul class=\"permanent\"><li class=\"first-level\"><a href=\"#\">All (' + escape((interp = allCount) == null ? '' : interp) + ')</a></li><li class=\"first-level\"><a href=\"#untagged\">Untagged (' + escape((interp = untaggedCount) == null ? '' : interp) + ')</a></li></ul><ul class=\"tags\"></ul>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<a');\nbuf.push(attrs({ 'href':(\"\" + (url) + \"\") }, {\"href\":true}));\nbuf.push('><i class=\"tag-icon\"></i><span>' + escape((interp = model.tagName) == null ? '' : interp) + ' (' + escape((interp = model.count) == null ? '' : interp) + ')</span></a>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"task-container\"><button class=\"toggle-state button\">Todo</button><div class=\"todo-field\"><input');\nbuf.push(attrs({ 'value':(\"\" + (model.description) + \"\"), 'tabindex':(\"\" + (tabindex) + \"\") }, {\"value\":true,\"tabindex\":true}));\nbuf.push('/></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"task-container\"><button class=\"toggle-state button disabled\">New</button><div class=\"todo-field\"><input');\nbuf.push(attrs({ 'tabindex':(\"1\"), 'placeholder':(\"\" + (formPlaceholder) + \"\") }, {\"tabindex\":true,\"placeholder\":true}));\nbuf.push('/></div></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1>' + escape((interp = title) == null ? '' : interp) + '</h1><div id=\"new-task\" class=\"task\"></div><ul id=\"task-list\"></ul>');\n}\nreturn buf.join(\"\");\n};"]}